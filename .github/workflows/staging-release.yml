name: Staging Release (tag)

on:
  workflow_call:
    inputs:
      release-version:
        description: 'Release version'
        required: true
        type: string
    secrets:
      PAT:
        description: 'Personal Access Token'
        required: true
      CONTAINER_REGISTRY_USERNAME:
        description: 'Container Registry Username'
        required: true
      CONTAINER_REGISTRY_TOKEN:
        description: 'Container Registry Password'
        required: true
      CONTAINER_REGISTRY_ENDPOINT:
        description: 'Container Registry Endpoint'
        required: true
      
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Release version'
        required: true
        type: string
    

# Update Chart
# Build and Push
# Create Release
# Sync Infrastructure

jobs:
  # update-helmfile:
  #   uses: libreconnect/actions/.github/workflows/update-helmfile.yml@main
  #   with:
  #     environment: "staging"
  #     release-version: ${{ inputs.release-version }}
  #     repository: libreconnect/glycoflow
  #   secrets: inherit
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.8.0
        with:
          toolchain: nightly
          components: rustfmt
      - name: Run rustfmt
        run: cargo fmt --all -- --check
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.8.0
        with:
          toolchain: nightly
          components: clippy
      - name: Run clippy
        run: cargo clippy --all -- -D warnings
  update-helmfile:
    runs-on: ubuntu-latest
    needs: [fmt, clippy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: libreconnect/glycoflow
          ref: main
          token: ${{ secrets.PAT }}
      - name: Update helmfile staging
        run: |
          VERSION="${{ inputs.release-version }}"
          echo "Version de staging qui sera déployé sur le helmfile: $VERSION"
          yq -ie ".image.tag=\"$VERSION\"" ./kubernetes/helmfiles/staging/values.yml
      - name: Commit changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add kubernetes/helmfiles/staging/values.yml
          git commit -m "Update staging values.yml to ${{ inputs.release-version }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
  tag-release:
    runs-on: ubuntu-latest
    needs: [update-helmfile, fmt, clippy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: libreconnect/glycoflow
          ref: main
          token: ${{ secrets.PAT }}
      - name: Tag Branches
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a ${{ inputs.release-version }} -m "Tagging ${{ inputs.release-version }}"
          git push origin ${{ inputs.release-version }}
  build-and-push:
    uses: libreconnect/actions/.github/workflows/docker-build-push.yml@main
    needs: [update-helmfile, tag-release, fmt, clippy]
    with:
      image-name: libreconnect/glycoflow
      dockerfile: Dockerfile
      build-args: ""
      tag: ${{ inputs.release-version }}
      repository: libreconnect/glycoflow
    secrets: inherit
  create-release:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          ref: ${{ inputs.release-version }}
          tag_name: ${{ inputs.release-version }}
          release_name: Release ${{ inputs.release-version }}
          draft: false
          prerelease: true

